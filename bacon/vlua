-- Aim configuration
local aim_config = _G.JALON_AIMCONFIG or {
    Enabled = true,
    KeyActivation = Enum.KeyCode.LeftShift,
    GuiToggleKey = Enum.KeyCode.LeftAlt,
    FOV = 150,
    TeamCheck = true,
    DistanceCheck = true,
    VisibleCheck = true,
    Smoothness = 0.975,
    Prediction = {
        Enabled = false,
        Value = 0.185
    },
    AimTarget = "Head",
    FOVVisibility = "Always Show FOV" -- Added FOV visibility option
}
_G.JALON_AIMCONFIG = _G.JALON_AIMCONFIG or aim_config

-- Services
local input_service = game:GetService("UserInputService")
local players = game:GetService("Players")
local run_service = game:GetService("RunService")
local gui_service = game:GetService("StarterGui")
local teleport_service = game:GetService("TeleportService")

-- Objects
local camera = workspace.CurrentCamera
local player = players.LocalPlayer
local fovCircle, targetBox = Drawing.new("Circle"), Drawing.new("Square")

-- Variables
local current_nearest_plr
local dragging = false
local dragInput
local dragStart
local startPos
local espEnabled = false
local guiVisible = true
local selectingKeybind = false

-- Functions
local function is_player_valid(plrArg)
    local plrChar = plrArg.Character
    local plrHumanoid, target_part = (plrChar and plrChar:FindFirstChildWhichIsA("Humanoid")), (plrChar and plrChar:FindFirstChild(aim_config.AimTarget))
    if not plrChar or not plrHumanoid or not target_part or plrArg == player or plrHumanoid.Health == 0 or plrChar:FindFirstChildWhichIsA("ForceField") then
        return false, nil
    end
    if aim_config.TeamCheck and (plrArg.TeamColor == player.TeamColor and not plrArg.Neutral) then
        return false, nil
    end
    return true, target_part
end

local function get_rootpart(plr)
    return plr.Character and plr.Character:FindFirstChild(aim_config.AimTarget) or nil
end

local function in_line_of_sight(origin_pos, ...)
    return #camera:GetPartsObscuringTarget({origin_pos}, {camera, player.Character, ...}) == 0
end

local function get_vel_prediction(velocity)
    return Vector3.new(velocity.X, math.clamp((velocity.Y * 0.5), -5, 10), velocity.Z)
end

local function get_camera_prediction(predicting_part)
    return predicting_part.CFrame + get_vel_prediction(predicting_part.Velocity) * aim_config.Prediction.Value
end

local function get_nearest_player()
    local nearest_plr_data = {aimPart = nil, cursor_dist = math.huge, char_dist = math.huge}

    for _, plr in pairs(players:GetPlayers()) do
        local passed, target_part = is_player_valid(plr)
        if not (passed and target_part) then continue end
        local screen_pos, on_screen = camera:WorldToViewportPoint(target_part.Position)
        local fov_dist = (input_service:GetMouseLocation() - Vector2.new(screen_pos.X, screen_pos.Y)).Magnitude
        local char_dist = (get_rootpart(player).Position - target_part.Position).Magnitude

        if not aim_config.VisibleCheck or (on_screen and in_line_of_sight(camera.CFrame, plr.Character)) then
            if (fov_dist <= aim_config.FOV and fov_dist < nearest_plr_data.cursor_dist) and (not aim_config.DistanceCheck or char_dist < nearest_plr_data.char_dist) then
                -- Check if wall check is enabled and target is visible
                if aim_config.WallCheck then
                    local targetPos = camera.CFrame.Position
                    local targetDir = (target_part.Position - targetPos).Unit
                    local targetRay = Ray.new(targetPos, targetDir * aim_config.FOV)
                    local hitPart, hitPos = workspace:FindPartOnRayWithIgnoreList(targetRay, {player.Character})
                    
                    if hitPart and hitPart:IsDescendantOf(plr.Character) then
                        -- Target is visible and not behind a wall
                        nearest_plr_data.aimPart = target_part
                        nearest_plr_data.cursor_dist = fov_dist
                        nearest_plr_data.char_dist = char_dist
                    end
                else
                    -- Wall check is disabled, so aim without checking for obstructions
                    nearest_plr_data.aimPart = target_part
                    nearest_plr_data.cursor_dist = fov_dist
                    nearest_plr_data.char_dist = char_dist
                end
            end
        end
    end
    return nearest_plr_data.aimPart and nearest_plr_data or nil
end

-- ESP settings
local espBoxes = {}
local espHealthBars = {}
local espTracers = {}
local espDistances = {}

-- Function to toggle ESP
local function toggle_esp(state)
    espEnabled = state
    for _, box in pairs(espBoxes) do
        box.Visible = state
    end
    for _, bar in pairs(espHealthBars) do
        bar.Visible = state
    end
    for _, tracer in pairs(espTracers) do
        tracer.Visible = state
    end
    for _, distance in pairs(espDistances) do
        distance.Visible = state
    end
end

-- Function to update ESP
local function update_esp()
    for _, plr in players:GetPlayers() do
        if plr ~= player then
            local plrChar = plr.Character
            if plrChar and plrChar:FindFirstChild("HumanoidRootPart") then
                local rootPart = plrChar:FindFirstChild("HumanoidRootPart")
                local head = plrChar:FindFirstChild("Head")
                local humanoid = plrChar:FindFirstChild("Humanoid")
                local screenPos, onScreen = camera:WorldToViewportPoint(rootPart.Position)

                if not espBoxes[plr] then
                    local box = Drawing.new("Square")
                    box.Color = Color3.fromRGB(255, 0, 0)
                    box.Thickness = 2
                    box.Filled = false
                    espBoxes[plr] = box
                end

                if not espHealthBars[plr] then
                    local bar = Drawing.new("Square")
                    bar.Color = Color3.fromRGB(0, 255, 0)
                    bar.Thickness = 2
                    bar.Filled = true
                    espHealthBars[plr] = bar
                end

                if not espTracers[plr] then
                    local tracer = Drawing.new("Line")
                    tracer.Color = Color3.fromRGB(255, 255, 255)
                    tracer.Thickness = 2
                    espTracers[plr] = tracer
                end

                if not espDistances[plr] then
                    local distanceLabel = Drawing.new("Text")
                    distanceLabel.Color = Color3.fromRGB(255, 255, 255)
                    distanceLabel.Size = 20
                    distanceLabel.Center = true
                    espDistances[plr] = distanceLabel
                end

                local box = espBoxes[plr]
                local bar = espHealthBars[plr]
                local tracer = espTracers[plr]
                local distanceLabel = espDistances[plr]

                box.Visible = espEnabled and onScreen and (not aim_config.TeamCheck or plr.TeamColor ~= player.TeamColor)
                bar.Visible = box.Visible
                tracer.Visible = box.Visible
                distanceLabel.Visible = box.Visible

                if box.Visible then
                    local boxSize = Vector3.new(4, 6, 0) -- Adjust the size here
                    local rootPos = camera:WorldToViewportPoint(rootPart.Position)
                    local headPos = camera:WorldToViewportPoint(head.Position + Vector3.new(0, 0.5, 0))
                    
                    box.Size = Vector2.new(boxSize.X * 10, boxSize.Y * 10)
                    box.Position = Vector2.new(rootPos.X - box.Size.X / 2, rootPos.Y - box.Size.Y / 2)
                    
                    bar.Size = Vector2.new(2, box.Size.Y)
                    bar.Position = Vector2.new(box.Position.X - bar.Size.X - 2, box.Position.Y + (box.Size.Y - bar.Size.Y))

                    tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y)
                    tracer.To = Vector2.new(screenPos.X, screenPos.Y)

                    local distance = (player.Character.HumanoidRootPart.Position - rootPart.Position).Magnitude
                    distanceLabel.Text = string.format("%dm", math.floor(distance))
                    distanceLabel.Position = Vector2.new(screenPos.X, screenPos.Y - 60)
                end
            end
        end
    end
end

-- Function to clean up ESP elements when a player leaves
local function remove_player_esp(plr)
    if espBoxes[plr] then
        espBoxes[plr]:Remove()
        espBoxes[plr] = nil
    end
    if espHealthBars[plr] then
        espHealthBars[plr]:Remove()
        espHealthBars[plr] = nil
    end
    if espTracers[plr] then
        espTracers[plr]:Remove()
        espTracers[plr] = nil
    end
    if espDistances[plr] then
        espDistances[plr]:Remove()
        espDistances[plr] = nil
    end
end

-- Connect player removing event
players.PlayerRemoving:Connect(remove_player_esp)

-- Connect update_esp to RenderStepped
run_service.RenderStepped:Connect(update_esp)

-- Create GUI
local screenGui = Instance.new("ScreenGui")
local aimFrame = Instance.new("Frame")
local aimFrame2 = Instance.new("Frame")
local aimHeadButton = Instance.new("TextButton")
local aimTorsoButton = Instance.new("TextButton")
local teamCheckButton = Instance.new("TextButton")
local espButton = Instance.new("TextButton")
local wallCheckButton = Instance.new("TextButton") -- New wall check button
local teleportToolsButton = Instance.new("TextButton")
local rejoinButton = Instance.new("TextButton")
local closeButton = Instance.new("TextButton")
local madeByLabel = Instance.new("TextLabel")
local keybindButton = Instance.new("TextButton")
local fovTextBox = Instance.new("TextBox")
local smoothnessTextBox = Instance.new("TextBox")
local fovVisibilityDropdown = Instance.new("TextButton")
local dropdownMenu = Instance.new("Frame")
local dropdownItems = {"Always Show FOV", "Only Show FOV While Aimbot Enabled", "Invisible"}
local speedTextBox = Instance.new("TextBox") -- New speed textbox
local jumpTextBox = Instance.new("TextBox") -- New jump textbox
local page1Button = Instance.new("TextButton")
local page2Button = Instance.new("TextButton")
local gradient = Instance.new("UIGradient")
local corner = Instance.new("UICorner")

screenGui.Parent = player:WaitForChild("PlayerGui")
screenGui.Name = "AimBotGui"

aimFrame.Parent = screenGui
aimFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
aimFrame.Size = UDim2.new(0, 240, 0, 620) -- Increased height to fit the button
aimFrame.Position = UDim2.new(0, 10, 0, 10)
aimFrame.Active = true
aimFrame.Draggable = true

corner.CornerRadius = UDim.new(0, 10)
corner.Parent = aimFrame

gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 50, 50)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(75, 75, 75))
}
gradient.Parent = aimFrame

local function styleButton(button)
    button.BackgroundColor3 = Color3.fromRGB(75, 75, 75)
    button.Size = UDim2.new(0, 220, 0, 30) -- Adjusted width to fit text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.SourceSansBold
    button.TextSize = 18
    corner:Clone().Parent = button
end

aimHeadButton.Parent = aimFrame
aimHeadButton.Position = UDim2.new(0, 10, 0, 10)
aimHeadButton.Text = "Aim Head"
aimHeadButton.MouseButton1Click:Connect(function()
    aim_config.AimTarget = "Head"
end)
styleButton(aimHeadButton)

aimTorsoButton.Parent = aimFrame
aimTorsoButton.Position = UDim2.new(0, 10, 0, 50)
aimTorsoButton.Text = "Aim Torso"
aimTorsoButton.MouseButton1Click:Connect(function()
    aim_config.AimTarget = "HumanoidRootPart"
end)
styleButton(aimTorsoButton)

teamCheckButton.Parent = aimFrame
teamCheckButton.Position = UDim2.new(0, 10, 0, 90)
teamCheckButton.Text = "Team Check: On"
teamCheckButton.MouseButton1Click:Connect(function()
    aim_config.TeamCheck = not aim_config.TeamCheck
    teamCheckButton.Text = "Team Check: " .. (aim_config.TeamCheck and "On" or "Off")
end)
styleButton(teamCheckButton)

espButton.Parent = aimFrame
espButton.Position = UDim2.new(0, 10, 0, 130)
espButton.Text = "ESP: Off"
espButton.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    espButton.Text = "ESP: " .. (espEnabled and "On" or "Off")
    toggle_esp(espEnabled)
end)
styleButton(espButton)

wallCheckButton.Parent = aimFrame
wallCheckButton.Position = UDim2.new(0, 10, 0, 170)
wallCheckButton.Text = "Wall Check: Off"
wallCheckButton.MouseButton1Click:Connect(function()
    aim_config.WallCheck = not aim_config.WallCheck
    wallCheckButton.Text = "Wall Check: " .. (aim_config.WallCheck and "On" or "Off")
end)
styleButton(wallCheckButton)

teleportToolsButton.Parent = aimFrame2
teleportToolsButton.Position = UDim2.new(0, 10, 0, 250) -- Adjust position as needed
teleportToolsButton.Text = "Teleport Tools"
teleportToolsButton.MouseButton1Click:Connect(function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/ron12373/Aimbot-script/main/bacon/tools/teleport.lua'))()
end)

styleButton(teleportToolsButton)

rejoinButton.Parent = aimFrame2
rejoinButton.Position = UDim2.new(0, 10, 0, 290)
rejoinButton.Text = "Rejoin"
rejoinButton.MouseButton1Click:Connect(function()
    teleport_service:Teleport(game.PlaceId)
end)
styleButton(rejoinButton)

closeButton.Parent = aimFrame
closeButton.Position = UDim2.new(0, 10, 0, 530)
closeButton.Text = "Close GUI"
closeButton.MouseButton1Click:Connect(function()
    aimFrame.Visible = false
end)
styleButton(closeButton)

madeByLabel.Parent = aimFrame
madeByLabel.Position = UDim2.new(0, 10, 0, 570)
madeByLabel.Size = UDim2.new(0, 220, 0, 30) -- Adjusted width to fit text
madeByLabel.Text = "Made by Bacon"
madeByLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
madeByLabel.BackgroundTransparency = 1
madeByLabel.Font = Enum.Font.SourceSansBold
madeByLabel.TextSize = 18

keybindButton.Parent = aimFrame
keybindButton.Position = UDim2.new(0, 10, 0, 210)
keybindButton.Text = "Keybind: " .. aim_config.KeyActivation.Name
keybindButton.MouseButton1Click:Connect(function()
    selectingKeybind = true
    keybindButton.Text = "Press any key..."
end)
styleButton(keybindButton)

fovTextBox.Parent = aimFrame2
fovTextBox.Position = UDim2.new(0, 10, 0, 170) -- Adjusted position
fovTextBox.Size = UDim2.new(0, 220, 0, 30) -- Adjusted size
fovTextBox.PlaceholderText = "FOV: " .. aim_config.FOV
fovTextBox.Text = ""
fovTextBox.Font = Enum.Font.SourceSansBold
fovTextBox.TextSize = 18
fovTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
fovTextBox.BackgroundColor3 = Color3.fromRGB(75, 75, 75)
corner:Clone().Parent = fovTextBox

fovTextBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local newFOV = tonumber(fovTextBox.Text)
        if newFOV then
            aim_config.FOV = newFOV
            fovTextBox.PlaceholderText = "FOV: " .. aim_config.FOV
            fovTextBox.Text = ""
        end
    end
end)

smoothnessTextBox.Parent = aimFrame2
smoothnessTextBox.Position = UDim2.new(0, 10, 0, 210) -- Adjusted position
smoothnessTextBox.Size = UDim2.new(0, 220, 0, 30) -- Adjusted size
smoothnessTextBox.PlaceholderText = "Smoothness: " .. aim_config.Smoothness
smoothnessTextBox.Text = ""
smoothnessTextBox.Font = Enum.Font.SourceSansBold
smoothnessTextBox.TextSize = 18
smoothnessTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
smoothnessTextBox.BackgroundColor3 = Color3.fromRGB(75, 75, 75)
corner:Clone().Parent = smoothnessTextBox

smoothnessTextBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local newSmoothness = tonumber(smoothnessTextBox.Text)
        if newSmoothness then
            aim_config.Smoothness = newSmoothness
            smoothnessTextBox.PlaceholderText = "Smoothness: " .. aim_config.Smoothness
            smoothnessTextBox.Text = ""
        end
    end
end)

fovVisibilityDropdown.Parent = aimFrame2
fovVisibilityDropdown.Position = UDim2.new(0, 10, 0, 530)
fovVisibilityDropdown.Size = UDim2.new(0, 220, 0, 30) -- Adjusted width to fit text
fovVisibilityDropdown.Text = "" .. aim_config.FOVVisibility
fovVisibilityDropdown.MouseButton1Click:Connect(function()
    dropdownMenu.Visible = not dropdownMenu.Visible
end)
styleButton(fovVisibilityDropdown)

-- Speed TextBox Configuration
speedTextBox.Parent = aimFrame2
speedTextBox.Position = UDim2.new(0, 10, 0, 90) -- Adjusted position to fit within the aimFrame
speedTextBox.Size = UDim2.new(0, 220, 0, 30) -- Adjusted size
speedTextBox.PlaceholderText = "Enter Speed Value"
speedTextBox.Text = "" -- Clears the default "TextBox" text
speedTextBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local newValue = tonumber(speedTextBox.Text)
        if newValue then
            local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = newValue
                while true do
                    humanoid.WalkSpeed = tonumber(speedTextBox.Text) or 16 -- Set to default if invalid
                    wait(0.1) -- Wait for a small duration before checking again
                end
            end
        end
    end
end)
styleButton(speedTextBox)

-- Jump Power TextBox Configuration
jumpTextBox.Parent = aimFrame2
jumpTextBox.Position = UDim2.new(0, 10, 0, 130) -- Adjusted position to fit within the aimFrame
jumpTextBox.Size = UDim2.new(0, 220, 0, 30) -- Adjusted size
jumpTextBox.PlaceholderText = "Enter Jump Power Value"
jumpTextBox.Text = "" -- Clears the default "TextBox" text
jumpTextBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local newValue = tonumber(jumpTextBox.Text)
        if newValue then
            local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.JumpPower = newValue
                while true do
                    humanoid.JumpPower = tonumber(jumpTextBox.Text) or 50
                    wait(0.1)
                end
            end
        end
    end
end)
styleButton(jumpTextBox)

-- Page 1 Button
page1Button.Parent = aimFrame2
page1Button.Position = UDim2.new(0, 10, 0, 10)
page1Button.Size = UDim2.new(0, 220, 0, 30) -- Adjusted size to fit the text
page1Button.Text = "Go Back"
page1Button.TextWrapped = true -- Ensure the text wraps within the button
page1Button.MouseButton1Click:Connect(function()
    aimFrame.Visible = true
    aimFrame2.Visible = false
end)
styleButton(page1Button)

-- Page 2 Button
page2Button.Parent = aimFrame
page2Button.Position = UDim2.new(0, 10, 0, 490) -- Position it at the bottom
page2Button.Size = UDim2.new(0, 240, 0, 40) -- Increased size to fit the text
page2Button.Text = "Go to Settings"
page2Button.TextWrapped = true -- Ensure the text wraps within the button
page2Button.MouseButton1Click:Connect(function()
    aimFrame.Visible = false
    aimFrame2.Visible = true
end)
styleButton(page2Button)

-- Configure aimFrame2
aimFrame2.Parent = screenGui
aimFrame2.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
aimFrame2.Size = UDim2.new(0, 240, 0, 580) -- Same size as aimFrame
aimFrame2.Position = UDim2.new(0, 10, 0, 10)
aimFrame2.Active = true
aimFrame2.Draggable = true
aimFrame2.Visible = false

-- Style and gradient for aimFrame2
corner:Clone().Parent = aimFrame2
gradient:Clone().Parent = aimFrame2

-- You can add other GUI elements to aimFrame2 as needed
local placeholderLabel = Instance.new("TextLabel")
placeholderLabel.Parent = aimFrame2
placeholderLabel.Position = UDim2.new(0, 10, 0, 50)
placeholderLabel.Size = UDim2.new(0, 220, 0, 30)
placeholderLabel.Text = "Settings"
placeholderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
placeholderLabel.BackgroundTransparency = 1
placeholderLabel.Font = Enum.Font.SourceSansBold
placeholderLabel.TextSize = 18

-- Dragging functionality for aimFrame2
aimFrame2.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = aimFrame2.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

aimFrame2.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType.Touch then
        dragInput = input
    end
end)

input_service.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        aimFrame2.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

dropdownMenu.Parent = aimFrame
dropdownMenu.Position = UDim2.new(0, 10, 0, 290)
dropdownMenu.Size = UDim2.new(0, 220, 0, 90) -- Adjusted width to fit text
dropdownMenu.Visible = false
dropdownMenu.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
corner:Clone().Parent = dropdownMenu

for i, item in ipairs(dropdownItems) do
    local dropdownItem = Instance.new("TextButton")
    dropdownItem.Parent = dropdownMenu
    dropdownItem.Position = UDim2.new(0, 0, 0, (i - 1) * 30)
    dropdownItem.Size = UDim2.new(0, 220, 0, 30) -- Adjusted width to fit text
    dropdownItem.Text = item
    dropdownItem.TextColor3 = Color3.fromRGB(255, 255, 255)
    dropdownItem.BackgroundColor3 = Color3.fromRGB(75, 75, 75)
    dropdownItem.Font = Enum.Font.SourceSansBold
    dropdownItem.TextSize = 18
    corner:Clone().Parent = dropdownItem

    dropdownItem.MouseButton1Click:Connect(function()
        aim_config.FOVVisibility = item
        fovVisibilityDropdown.Text = "" .. item
        dropdownMenu.Visible = false
    end)
end

fovVisibilityDropdown.Parent = aimFrame
fovVisibilityDropdown.Position = UDim2.new(0, 10, 0, 250) -- Placed here
fovVisibilityDropdown.Size = UDim2.new(0, 220, 0, 30) -- Placed here

-- Track which frame is currently active
local activeFrame = aimFrame

-- Function to toggle visibility of aimFrame
local function toggle_aimFrame()
    activeFrame.Visible = not activeFrame.Visible
    toggle_esp(espEnabled)  -- Ensure ESP visibility remains consistent with the ESP button state
end

-- Function to toggle visibility of aimFrame2
local function toggle_aimFrame2()
    aimFrame2.Visible = not aimFrame2.Visible
    toggle_esp(espEnabled)  -- Ensure ESP visibility remains consistent with the ESP button state
end

-- Connect Left Alt input to toggle visibility of activeFrame
input_service.InputBegan:Connect(function(input, isProcessed)
    if isProcessed then return end

    if input.UserInputType == Enum.UserInputType.Keyboard then
        if selectingKeybind then
            aim_config.KeyActivation = input.KeyCode
            keybindButton.Text = "Keybind: " .. input.KeyCode.Name
            selectingKeybind = false
        elseif input.KeyCode == aim_config.GuiToggleKey then
            if activeFrame == aimFrame then
                toggle_aimFrame()
            elseif activeFrame == aimFrame2 then
                toggle_aimFrame2()
            end
        elseif input.KeyCode == aim_config.KeyActivation then
            aim_config.Enabled = true
        end
    end
end)

-- Function to switch active frame to aimFrame
local function switchToAimFrame()
    if activeFrame == aimFrame2 then
        toggle_aimFrame2()
        activeFrame = aimFrame
        toggle_aimFrame()
    end
end

-- Function to switch active frame to aimFrame2
local function switchToAimFrame2()
    if activeFrame == aimFrame then
        toggle_aimFrame()
        activeFrame = aimFrame2
        toggle_aimFrame2()
    end
end

-- Connect page buttons to switch between aimFrame and aimFrame2
page1Button.MouseButton1Click:Connect(switchToAimFrame)
page2Button.MouseButton1Click:Connect(switchToAimFrame2)

input_service.InputEnded:Connect(function(input, gpe)
    if gpe then return end
    if input.UserInputType == Enum.UserInputType.Keyboard then
        if input.KeyCode == aim_config.KeyActivation then
            aim_config.Enabled = false
        end
    end
end)

-- updates
run_service.RenderStepped:Connect(function()
    local fovVisible = false
    if aim_config.FOVVisibility == "Always Show FOV" then
        fovVisible = true
    elseif aim_config.FOVVisibility == "Only Show FOV While Aimbot Enabled" and aim_config.Enabled then
        fovVisible = true
    end

    fovCircle.Visible = fovVisible
    fovCircle.Position = input_service:GetMouseLocation()
    fovCircle.Thickness = 1.5
    fovCircle.NumSides = 18
    fovCircle.Radius = aim_config.FOV
    fovCircle.Color = Color3.fromRGB(255, 255, 255)
    fovCircle.Filled = false

    update_esp()

    if aim_config.Enabled then
        local nearest_plr_data = get_nearest_player()
        if nearest_plr_data then
            current_nearest_plr = nearest_plr_data.aimPart
        else
            current_nearest_plr = nil
        end
    else
        current_nearest_plr = nil
    end

    if current_nearest_plr then
        local predicted_camera = (if aim_config.Prediction.Enabled then get_camera_prediction(current_nearest_plr) else current_nearest_plr.CFrame)
        local current_camera = camera.CFrame.Position
        camera.CFrame = CFrame.lookAt(current_camera, predicted_camera.Position:Lerp(current_camera, aim_config.Smoothness))
    end
end)

-- Dragging functionality
local function updateInput(input)
    local delta = input.Position - dragStart
    aimFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

aimFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = aimFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

aimFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType.Touch then
        dragInput = input
    end
end)

input_service.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateInput(input)
    end
end)

-- initial ESP state
toggle_esp(espEnabled)

local StarterGui = game:GetService("StarterGui")
StarterGui:SetCore("SendNotification", {
    Title = "Made By",
    Text = "Bacon But Pro",
    Icon = "rbxassetid://17825558705",
    Duration = 10
})
