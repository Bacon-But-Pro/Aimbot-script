-- aim configuration
local aim_config = _G.JALON_AIMCONFIG or {
    Enabled = true,
    KeyActivation = Enum.KeyCode.LeftShift,

    FOV = 150,
    TeamCheck = true,
    DistanceCheck = true,
    VisibleCheck = true,

    Smoothness = 0.975,
    Prediction = {
        Enabled = false,
        Value = 0.185
    },
    AimTarget = "Head"
}
_G.JALON_AIMCONFIG = _G.JALON_AIMCONFIG or aim_config

-- services
local input_service = game:GetService("UserInputService")
local players = game:GetService("Players")
local run_service = game:GetService("RunService")
local gui_service = game:GetService("StarterGui")
local teleport_service = game:GetService("TeleportService")

-- objects
local camera = workspace.CurrentCamera
local player = players.LocalPlayer
local fovCircle, targetBox = Drawing.new("Circle"), Drawing.new("Square")

-- variables
local current_nearest_plr
local dragging = false
local dragInput
local dragStart
local startPos
local espEnabled = false
local guiVisible = true
local selectingKeybind = false

-- functions
local function is_player_valid(plrArg)
    local plrChar = plrArg.Character
    local plrHumanoid, target_part = (plrChar and plrChar:FindFirstChildWhichIsA("Humanoid")), (plrChar and plrChar:FindFirstChild(aim_config.AimTarget))
    return plrArg ~= player and (plrChar and (plrHumanoid and plrHumanoid.Health ~= 0)) and not plrArg.Character:FindFirstChildWhichIsA("ForceField") and (if aim_config.TeamCheck then (plrArg.Neutral or plrArg.TeamColor ~= player.TeamColor) else true), target_part
end

local function get_rootpart(plr)
    return (if plr.Character then plr.Character:FindFirstChild(aim_config.AimTarget) else nil)
end

local function in_line_of_sight(origin_pos, ...)
    return #camera:GetPartsObscuringTarget({origin_pos}, {camera, player.Character, ...}) == 0
end

local function get_vel_prediction(velocity)
    return Vector3.new(velocity.X, math.clamp((velocity.Y * 0.5), -5, 10), velocity.Z)
end

local function get_camera_prediction(predicting_part)
    return predicting_part.CFrame + get_vel_prediction(predicting_part.Velocity) * (aim_config.Prediction.Value)
end

-- gets nearest player relative to cursor
local function get_nearest_player()
    local nearest_plr_data = {aimPart = nil, cursor_dist = math.huge, char_dist = math.huge}

    for _, plr in players:GetPlayers() do
        local passed, target_part = is_player_valid(plr)
        if not (passed and target_part) then continue end
        local screen_pos, on_screen = camera:WorldToViewportPoint(target_part.Position)
        local fov_dist = (input_service:GetMouseLocation() - Vector2.new(screen_pos.X, screen_pos.Y)).Magnitude
        local char_dist = (get_rootpart(player).Position - target_part.Position).Magnitude

        if (not aim_config.VisibleCheck or (on_screen and in_line_of_sight(camera.CFrame, plr.Character))) then
            if ((fov_dist <= aim_config.FOV) and (fov_dist < nearest_plr_data.cursor_dist)) and (not aim_config.DistanceCheck or (char_dist < nearest_plr_data.char_dist)) then
                nearest_plr_data.aimPart = target_part
                nearest_plr_data.cursor_dist = fov_dist
                nearest_plr_data.char_dist = char_dist
            end
        end
    end
    return (if nearest_plr_data.aimPart then nearest_plr_data else nil)
end

-- ESP functionality
local espBoxes = {}

local function toggle_esp(state)
    espEnabled = state
    for _, box in pairs(espBoxes) do
        box.Visible = state
    end
end

local function update_esp()
    for _, plr in players:GetPlayers() do
        if plr ~= player then
            local plrChar = plr.Character
            if plrChar and plrChar:FindFirstChild("HumanoidRootPart") then
                local rootPart = plrChar:FindFirstChild("HumanoidRootPart")
                local screenPos, onScreen = camera:WorldToViewportPoint(rootPart.Position)

                if not espBoxes[plr] then
                    local box = Drawing.new("Square")
                    box.Color = Color3.fromRGB(255, 0, 0)
                    box.Thickness = 2
                    box.Filled = false
                    espBoxes[plr] = box
                end

                local box = espBoxes[plr]
                box.Visible = espEnabled and onScreen and (not aim_config.TeamCheck or plr.TeamColor ~= player.TeamColor)
                if box.Visible then
                    box.Size = Vector2.new(50, 100) -- Adjust the size as needed
                    box.Position = Vector2.new(screenPos.X - 25, screenPos.Y - 50) -- Adjust the position as needed
                end
            end
        end
    end
end

-- Create GUI
local screenGui = Instance.new("ScreenGui")
local aimFrame = Instance.new("Frame")
local aimHeadButton = Instance.new("TextButton")
local aimTorsoButton = Instance.new("TextButton")
local teamCheckButton = Instance.new("TextButton")
local espButton = Instance.new("TextButton")
local rejoinButton = Instance.new("TextButton")
local closeButton = Instance.new("TextButton")
local madeByLabel = Instance.new("TextLabel")
local keybindButton = Instance.new("TextButton")
local fovSlider = Instance.new("TextButton")
local smoothnessSlider = Instance.new("TextButton")

screenGui.Parent = player:WaitForChild("PlayerGui")
screenGui.Name = "AimBotGui"

aimFrame.Parent = screenGui
aimFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
aimFrame.Size = UDim2.new(0, 140, 0, 370)
aimFrame.Position = UDim2.new(0, 10, 0, 10)
aimFrame.Active = true
aimFrame.Draggable = true

aimHeadButton.Parent = aimFrame
aimHeadButton.BackgroundColor3 = Color3.fromRGB(0, 185, 35)
aimHeadButton.Size = UDim2.new(0, 120, 0, 30)
aimHeadButton.Position = UDim2.new(0, 10, 0, 10)
aimHeadButton.Text = "Aim Head"
aimHeadButton.TextColor3 = Color3.fromRGB(255, 255, 255)
aimHeadButton.MouseButton1Click:Connect(function()
    aim_config.AimTarget = "Head"
end)

aimTorsoButton.Parent = aimFrame
aimTorsoButton.BackgroundColor3 = Color3.fromRGB(0, 185, 35)
aimTorsoButton.Size = UDim2.new(0, 120, 0, 30)
aimTorsoButton.Position = UDim2.new(0, 10, 0, 50)
aimTorsoButton.Text = "Aim Torso"
aimTorsoButton.TextColor3 = Color3.fromRGB(255, 255, 255)
aimTorsoButton.MouseButton1Click:Connect(function()
    aim_config.AimTarget = "HumanoidRootPart"
end)

teamCheckButton.Parent = aimFrame
teamCheckButton.BackgroundColor3 = Color3.fromRGB(0, 185, 35)
teamCheckButton.Size = UDim2.new(0, 120, 0, 30)
teamCheckButton.Position = UDim2.new(0, 10, 0, 90)
teamCheckButton.Text = "Team Check: On"
teamCheckButton.TextColor3 = Color3.fromRGB(255, 255, 255)
teamCheckButton.MouseButton1Click:Connect(function()
    aim_config.TeamCheck = not aim_config.TeamCheck
    teamCheckButton.Text = "Team Check: " .. (aim_config.TeamCheck and "On" or "Off")
end)

espButton.Parent = aimFrame
espButton.BackgroundColor3 = Color3.fromRGB(0, 185, 35)
espButton.Size = UDim2.new(0, 120, 0, 30)
espButton.Position = UDim2.new(0, 10, 0, 130)
espButton.Text = "ESP: Off"
espButton.TextColor3 = Color3.fromRGB(255, 255, 255)
espButton.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    toggle_esp(espEnabled)
    espButton.Text = "ESP: " .. (espEnabled and "On" or "Off")
end)

rejoinButton.Parent = aimFrame
rejoinButton.BackgroundColor3 = Color3.fromRGB(0, 185, 35)
rejoinButton.Size = UDim2.new(0, 120, 0, 30)
rejoinButton.Position = UDim2.new(0, 10, 0, 170)
rejoinButton.Text = "Rejoin"
rejoinButton.TextColor3 = Color3.fromRGB(255, 255, 255)
rejoinButton.MouseButton1Click:Connect(function()
    teleport_service:Teleport(game.PlaceId, player)
end)

closeButton.Parent = aimFrame
closeButton.BackgroundColor3 = Color3.fromRGB(0, 185, 35)
closeButton.Size = UDim2.new(0, 120, 0, 30)
closeButton.Position = UDim2.new(0, 10, 0, 210)
closeButton.Text = "Close GUI"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.MouseButton1Click:Connect(function()
    guiVisible = not guiVisible
    aimFrame.Visible = guiVisible
    closeButton.Text = guiVisible and "Close GUI" or "Open GUI"
end)

keybindButton.Parent = aimFrame
keybindButton.BackgroundColor3 = Color3.fromRGB(0, 185, 35)
keybindButton.Size = UDim2.new(0, 120, 0, 30)
keybindButton.Position = UDim2.new(0, 10, 0, 250)
keybindButton.Text = "Keybind: LeftShift"
keybindButton.TextColor3 = Color3.fromRGB(255, 255, 255)
keybindButton.MouseButton1Click:Connect(function()
    selectingKeybind = true
    keybindButton.Text = "Press a key..."
end)

fovSlider.Parent = aimFrame
fovSlider.BackgroundColor3 = Color3.fromRGB(0, 185, 35)
fovSlider.Size = UDim2.new(0, 120, 0, 30)
fovSlider.Position = UDim2.new(0, 10, 0, 290)
fovSlider.Text = "FOV: " .. tostring(aim_config.FOV)
fovSlider.TextColor3 = Color3.fromRGB(255, 255, 255)
fovSlider.MouseButton1Click:Connect(function()
    local newFov = tonumber(gui_service:PromptInput("Enter FOV", tostring(aim_config.FOV)))
    if newFov then
        aim_config.FOV = newFov
        fovSlider.Text = "FOV: " .. tostring(aim_config.FOV)
    end
end)

smoothnessSlider.Parent = aimFrame
smoothnessSlider.BackgroundColor3 = Color3.fromRGB(0, 185, 35)
smoothnessSlider.Size = UDim2.new(0, 120, 0, 30)
smoothnessSlider.Position = UDim2.new(0, 10, 0, 330)
smoothnessSlider.Text = "Smoothness: " .. tostring(aim_config.Smoothness)
smoothnessSlider.TextColor3 = Color3.fromRGB(255, 255, 255)
smoothnessSlider.MouseButton1Click:Connect(function()
    local newSmoothness = tonumber(gui_service:PromptInput("Enter Smoothness", tostring(aim_config.Smoothness)))
    if newSmoothness then
        aim_config.Smoothness = newSmoothness
        smoothnessSlider.Text = "Smoothness: " .. tostring(aim_config.Smoothness)
    end
end)

madeByLabel.Parent = aimFrame
madeByLabel.BackgroundTransparency = 1
madeByLabel.Size = UDim2.new(0, 120, 0, 20)
madeByLabel.Position = UDim2.new(0, 10, 0, 370)
madeByLabel.Text = "Made by BaconButPro"
madeByLabel.TextColor3 = Color3.fromRGB(255, 255, 255)

-- Dragging functionality
local function onInputBegan(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = aimFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    elseif input.UserInputType == Enum.UserInputType.Keyboard and selectingKeybind then
        aim_config.KeyActivation = input.KeyCode
        keybindButton.Text = "Keybind: " .. tostring(aim_config.KeyActivation):match("%w+$")
        selectingKeybind = false
    end
end

local function onInputChanged(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end

local function update(input)
    if dragging and input == dragInput then
        local delta = input.Position - dragStart
        aimFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end

aimFrame.InputBegan:Connect(onInputBegan)
aimFrame.InputChanged:Connect(onInputChanged)
input_service.InputChanged:Connect(update)

-- Keybind to toggle GUI visibility
input_service.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.LeftAlt then
        guiVisible = not guiVisible
        aimFrame.Visible = guiVisible
    end
end)

-- main
targetBox.Color = Color3.fromRGB(0, 185, 35)
targetBox.Filled = true
targetBox.Size = Vector2.new(20, 20)
targetBox.Thickness = 20
targetBox.Transparency = .6

fovCircle.Color = Color3.fromRGB(0, 185, 35)
fovCircle.Thickness = 2
fovCircle.Transparency = .6
fovCircle.Visible = true

run_service.PreSimulation:Connect(function()
    current_nearest_plr = get_nearest_player()

    fovCircle.Radius = aim_config.FOV
    fovCircle.Position = input_service:GetMouseLocation()

    if current_nearest_plr then
        local screen_pos, on_screen = camera:WorldToViewportPoint(current_nearest_plr.aimPart.Position)

        targetBox.Visible = on_screen
        targetBox.Position = (Vector2.new(screen_pos.X, screen_pos.Y) - (targetBox.Size / 2))

        if input_service:IsKeyDown(aim_config.KeyActivation) then
            local target_position = (if aim_config.Prediction.Enabled then get_camera_prediction(current_nearest_plr.aimPart) else current_nearest_plr.aimPart)
            local horizontal_look = CFrame.lookAt(camera.CFrame.Position, target_position.Position)

            camera.CFrame = camera.CFrame:Lerp(horizontal_look, aim_config.Smoothness)
        end
    else
        targetBox.Visible = false
        targetBox.Position = Vector3.zero
    end
    
    update_esp()
end)
